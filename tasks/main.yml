---
# tasks file for el7-prometheus

# sudo useradd --no-create-home --shell /bin/false prometheus
- name: "Create the {{ node_exporter_system_user }} user"
  user:
    name: "{{ node_exporter_system_user }}"
    comment: Prometheus metrics and alerting user
    shell: /bin/false
    create_home: false

# wget https://github.com/prometheus/node_exporter/releases/download/v*/node_exporter-*.*-amd64.tar.gz
- name: Download node_exporter binary to local folder
  become: false
  get_url:
    url: "{{ node_exporter.url }}"
    dest: "/tmp/{{ node_exporter.artifact }}"
    checksum: "sha256:{{ node_exporter.checksum }}"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: Unpack node_exporter binary
  become: false
  unarchive:
    src: "/tmp/{{ node_exporter.artifact }}"
    dest: "/tmp"
    creates: "/tmp/node_exporter-{{ node_exporter.version }}.linux-amd64/node_exporter"
  delegate_to: localhost
  check_mode: false

- name: Create /usr/local/bin
  file:
    path: /usr/local/bin
    state: directory
    mode: 0755

- name: "Create /etc/prometheus owned by {{ node_exporter_system_user }}"
  file:
    path: /etc/prometheus
    state: directory
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    mode: 0755

- name: "Create /var/lib/prometheus owned by {{ node_exporter_system_user }}"
  file:
    path: /var/lib/prometheus
    state: directory
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    mode: 0755

- name: Propagate node_exporter binaries
  copy:
    src: "/tmp/node_exporter-{{ node_exporter.version }}.linux-amd64/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    mode: 0750
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
  notify: restart node_exporter
  when: not ansible_check_mode

curl -LO https://github.com/prometheus/prometheus/releases/download/v2.3.2/prometheus-2.3.2.linux-amd64.tar.gz
tar -xvf prometheus-2.3.2.linux-amd64.tar.gz
mv prometheus-2.3.2.linux-amd64 prometheus-files
sudo cp prometheus-files/prometheus /usr/local/bin/
sudo cp prometheus-files/promtool /usr/local/bin/
sudo chown prometheus:prometheus /usr/local/bin/prometheus
sudo chown prometheus:prometheus /usr/local/bin/promtool
sudo cp -r prometheus-files/consoles /etc/prometheus
sudo cp -r prometheus-files/console_libraries /etc/prometheus
sudo chown -R prometheus:prometheus /etc/prometheus/consoles
sudo chown -R prometheus:prometheus /etc/prometheus/console_libraries
sudo vi /etc/prometheus/prometheus.yml
global:
  scrape_interval: 10s
 
scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']
sudo chown prometheus:prometheus /etc/prometheus/prometheus.yml
sudo vi /etc/systemd/system/prometheus.service


global:
  scrape_interval:     15s
  evaluation_interval: 15s

scrape_configs:
  - job_name: 'prometheus'

    static_configs:
      - targets: ['127.0.0.1:9090', '127.0.0.1:9100']
        labels:
          group: 'prometheus'

cd 

docker run -d --net=host \
    -v /root/prometheus.yml:/etc/prometheus/prometheus.yml \
    --name prometheus-server \
    prom/prometheus

docker run -d \
  -v "/proc:/host/proc" \
  -v "/sys:/host/sys" \
  -v "/:/rootfs" \
  --net="host" \
  --name=prometheus \
  quay.io/prometheus/node-exporter:v0.13.0 \
    -collector.procfs /host/proc \
    -collector.sysfs /host/sys \
    -collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($|/)"

cd ~ && curl -L -o ~/grafana-4.5.1.linux-x64.tar.gz https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-4.5.1.linux-x64.tar.gz && tar -zxvf ~/grafana-4.5.1.linux-x64.tar.gz

cd ~/grafana-4.5.1/bin/ && ./grafana-server


...